name: Build Test

on:
  workflow_dispatch:

jobs:

  Build_For_Global_AnkiAddon_test:

    runs-on: ubuntu-22.04
    timeout-minutes: 3

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}

      - name: Build global root
        run: cd scripts && sh common-github-build-global-root.sh "root-global"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to oss
        run: |
            pwd
            ossutil sync src/output-binary/${{ env.ADDON_PLATFORM }} oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/${{ env.ADDON_PLATFORM }} --delete --force
            ossutil cp global-ultimate-addon-universal-${{ env.ADDON_VERSION }}.ankiaddon oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

  Build_For_Win64_39:

    runs-on: windows-2022
    timeout-minutes: 4

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "pyd" "WindowsAMD6439"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
    
  Build_For_Ubuntu_311:
    
    runs-on: ubuntu-22.04
    timeout-minutes: 4
  
    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install setuptools==64.0.3 packaging==24.0
          pip install aqt==2.1.49
          pip install -r requirements.txt
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "so" "LinuxX64311"
  
      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}
  
      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

