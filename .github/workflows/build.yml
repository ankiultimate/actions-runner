name: Build All Packages

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target remote branch name'
        default: 'master'


jobs:

  Build_For_Win64_38:

    runs-on: windows-2022
    timeout-minutes: 5

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "pyd" "WindowsAMD6438"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

  Build_For_Win64_39:

    runs-on: windows-2022
    timeout-minutes: 5

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "pyd" "WindowsAMD6439"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

  Build_For_Win32_38:

    runs-on: windows-2022
    timeout-minutes: 5

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.8'
          cache: 'pip'
          architecture: 'x86'
      - name: Install dependencies
        run: pip install -r requirements-win38.txt
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "pyd" "WindowsX8638"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

  Build_For_Ubuntu_38:

    runs-on: ubuntu-20.04
    timeout-minutes: 8

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.8'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          pip install --upgrade pip==23
          pip install -r requirements.txt
        
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "so" "LinuxX6438"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

  Build_For_Ubuntu_39:

    runs-on: ubuntu-20.04
    timeout-minutes: 8

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.9'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          pip install --upgrade pip==23
          pip install -r requirements.txt
        
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "so" "LinuxX6439"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

  Build_For_Ubuntu_311:

    runs-on: ubuntu-20.04
    timeout-minutes: 8

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          pip install --upgrade pip==23
          pip install -r requirements.txt
          
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build.sh "so" "LinuxX64311"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force

  Build_For_Mac_38:

    runs-on: macos-13
    timeout-minutes: 5

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build-mac.sh "so" "DarwinX6438"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force


  Build_For_Mac_39:

    runs-on: macos-13
    timeout-minutes: 5

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests
        
      - name: Build binaries
        run: cd scripts && sh common-github-build-mac.sh "so" "DarwinX6439"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
        
  Build_For_Mac_Arm:

    runs-on: macos-14
    timeout-minutes: 5

    steps:
      - uses: git9527/clean-up-action@v3
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.MY_REPO }}
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.inputs.branch }}
      - name: Set up Python
        run: |
          brew reinstall python@3.9
          echo "/opt/homebrew/bin" >> $GITHUB_PATH
          python3.9 -V
        
      - name: Install dependencies
        run: pip3.9 install -r requirements-arm.txt

      - name: Run tests
        env:
            PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: 'python'
        run: pytest tests

      - name: Build binaries
        run: cd scripts && sh common-github-build-arm.sh "so" "DarwinArm6439"

      - name: Set up Aliyun OSS
        uses: yizhoumo/setup-ossutil@v1
        with:
          endpoint: oss-cn-shanghai.aliyuncs.com
          access-key-id: ${{ secrets.OSS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_KEY_SECRET }}

      - name: Sync file to OSS
        run: |
          pwd 
          ossutil cp ${{ env.ADDON_PLATFORM }}.zip oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
          ossutil cp ${{ env.ADDON_PLATFORM }}-hash.txt oss://${{ vars.OSS_KEY_BUCKET }}/ultimate-template/${{ env.ADDON_VERSION }}/ --force
  
